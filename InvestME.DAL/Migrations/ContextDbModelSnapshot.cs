// <auto-generated />
using System;
using InvestME.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvestME.DAL.Migrations
{
    [DbContext(typeof(ContextDb))]
    partial class ContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InvestME.DAL.Models.Acoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyCodeAcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateLote")
                        .HasColumnType("datetime2");

                    b.Property<float?>("DividendYield")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<float?>("EVBIT")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<bool>("FilterMain")
                        .HasColumnType("bit");

                    b.Property<float?>("PBIT")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<float?>("PVPA")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<float?>("Preco")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<float?>("VolumeFinanceiro")
                        .IsRequired()
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CompanyCodeAcao");

                    b.ToTable("Acoes");
                });

            modelBuilder.Entity("InvestME.DAL.Models.Company", b =>
                {
                    b.Property<string>("CodeAcao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CodeAcao");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("InvestME.DAL.Models.Investments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AcaoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("ValueInvested")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AcaoId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("InvestME.DAL.Models.Acoes", b =>
                {
                    b.HasOne("InvestME.DAL.Models.Company", "Company")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyCodeAcao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvestME.DAL.Models.Investments", b =>
                {
                    b.HasOne("InvestME.DAL.Models.Acoes", "Acao")
                        .WithMany()
                        .HasForeignKey("AcaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acao");
                });

            modelBuilder.Entity("InvestME.DAL.Models.Company", b =>
                {
                    b.Navigation("Companies");
                });
#pragma warning restore 612, 618
        }
    }
}
